// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
//This source code was auto-generated by MonoXSD
//
namespace Schemas.CRCL.Program {
    
    
    /// <remarks>
///
///        CRCLProgramType is derived from DataThingType.
///        An instance of CRCLProgramType has the following elements:
///          Name (inherited, optional)
///          InitCanon
///          MiddleCommand (optional, multiple)
///          EndCanon.
///
///        CRCLProgramType defines a CRCL program as a sequence of CRCL
///        commands. The CRCL commands in an instance of CRCLProgramType
///        must be executed in the order given. Using a CRCL program is
///        intended for testing and demos, not normal operation.
///
///        A CRCL program must start with an InitCanon command and end
///        with an EndCanon command. It may have zero to many middle
///        commands between the InitCanon and the EndCanon.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CRCLProgram")]
    public partial class CRCLProgramType : DataThingType {
        
        private InitCanonType initCanonField;
        
        private MiddleCommandType[] middleCommandField;
        
        private EndCanonType endCanonField;
        
        /// <remarks/>
        public InitCanonType InitCanon {
            get {
                return this.initCanonField;
            }
            set {
                this.initCanonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MiddleCommand")]
        public MiddleCommandType[] MiddleCommand {
            get {
                return this.middleCommandField;
            }
            set {
                this.middleCommandField = value;
            }
        }
        
        /// <remarks/>
        public EndCanonType EndCanon {
            get {
                return this.endCanonField;
            }
            set {
                this.endCanonField = value;
            }
        }
    }
    
    /// <remarks>
///
///        InitCanonType is derived from CRCLCommandType.
///        An instance of InitCanonType has the following elements:
///          Name (inherited, optional)
///          CommandID (inherited).
///
///        An instance of InitCanonType is used to indicate that the robot
///        should be prepared to execute further canonical robot commands.
///        When a robot is ready to execute commands, the first CRCL command
///        it should be sent is an instance of InitCanonType. Any CRCL
///        commands received before an instance of InitCanonType must not be
///        executed. Other robot-specific actions may be taken in preparation
///        for executing CRCL commands.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitCanonType : CRCLCommandType {
    }
    
    /// <remarks>
///
///        The abstract CRCLCommandType is derived from DataThingType.
///        An instance of CRCLCommandType has the following elements:
///          Name (inherited, optional)
///          CommandID.
///
///        CRCLCommandType is an abstract type from which all other
///        CRCL commands are derived.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InitCanonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MiddleCommandType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EndCanonType))]
    public partial class CRCLCommandType : DataThingType {
        
        private string commandIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string CommandID {
            get {
                return this.commandIDField;
            }
            set {
                this.commandIDField = value;
            }
        }
    }
    
    /// <remarks>
///
///        An instance of DataThingType has the following elements:
///          Name (optional)
///          .
///
///        DataThingType is an abstract type from which more specific types
///        of data thing are derived. That includes all complex data
///        types such as VectorType, PoseType, etc.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CRCLProgramType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CRCLCommandType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InitCanonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MiddleCommandType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EndCanonType))]
    public partial class DataThingType {
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="ID")]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks>
///
///        The abstract MiddleCommandType is derived from CRCLCommandType.
///        MiddleCommandType has  the following elements:
///          Name (inherited, optional)
///          CommandID (inherited).
///
///        MiddleCommandType is the abstract parent type of specific CRCL
///        command types. Only derived types of MiddleCommandType may be
///        instantiated.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MiddleCommandType : CRCLCommandType {
    }
    
    /// <remarks>
///
///        EndCanonType is derived from CRCLCommandType.
///        An instance of EndCanonType has the following elements:
///          Name (inherited, optional)
///          CommandID (inherited).
///
///        An instance of EndCanonType is used to indicate that the robot
///        should not execute any further CRCL commands other than an
///        instance of InitCanonType until an InitCanonType command is
///        received. Other robot-specific actions may be taken in
///        preparation for shutting down.
///      
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndCanonType : CRCLCommandType {
    }
}
